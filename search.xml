<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PyCharm专业版最简单的破解教程，永久适用</title>
    <url>/posts/15000.html</url>
    <content><![CDATA[<h1 id="PyCharm专业版最简单的破解教程，永久适用"><a href="#PyCharm专业版最简单的破解教程，永久适用" class="headerlink" title="PyCharm专业版最简单的破解教程，永久适用"></a>PyCharm专业版最简单的破解教程，永久适用</h1><h2 id="1-从官网下载PyCharm"><a href="#1-从官网下载PyCharm" class="headerlink" title="1.从官网下载PyCharm"></a>1.从官网下载PyCharm</h2><p>官网的下载速度是很快的！</p>
<p>PyCharm官网：<a href="https://www.jetbrains.com/pycharm/">PyCharm: the Python IDE for Professional Developers by JetBrains</a></p>
<p>重点：必须下载2021.2.2及之前的版本，否则只能首次试用30天，之后不可试用（要登录官网账号验证是否试用过）</p>
<p>下载链接直接放下面了：</p>
<p>方式一：<strong>直接下载</strong>：<a href="https://download.jetbrains.com/python/pycharm-professional-2021.2.2.exe?_ga=2.177314661.139758805.1663811841-1329964021.1654160823&amp;_gl=1">https://download.jetbrains.com/python/pycharm-professional-2021.2.2.exe?_ga=2.177314661.139758805.1663811841-1329964021.1654160823&amp;_gl=1</a></p>
<p>方式二：进入下载页面下载：<a href="https://www.jetbrains.com/pycharm/download/other.html">Other Versions - PyCharm (jetbrains.com)</a></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220922145852780-920855323.png"></p>
<h2 id="2-使用脚本清空试用天数续期【无限续期】"><a href="#2-使用脚本清空试用天数续期【无限续期】" class="headerlink" title="2.使用脚本清空试用天数续期【无限续期】"></a>2.使用脚本清空试用天数续期【无限续期】</h2><p>等到过期的时候再使用脚本<code>reset_jetbrains_eval_windows.vbs</code>清空天数就ok</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220922150445043-2094612096.png"></p>
<p>使用方法：双击脚本即可</p>
<p>另外这个脚本对于所有的<code>JetBrain</code>的产品都是有效的，记住软件版本选择<code>2021.2.2</code>以前的</p>
<p>脚本下载链接：<a href="https://wwp.lanzoub.com/iQk4t0c5wm7e">https://wwp.lanzoub.com/iQk4t0c5wm7e</a></p>
]]></content>
      <categories>
        <category>破解资源</category>
      </categories>
      <tags>
        <tag>破解软件</tag>
        <tag>JetBrain</tag>
        <tag>PyCharm</tag>
      </tags>
  </entry>
  <entry>
    <title>Github和git使用指南：以PyCharm为例</title>
    <url>/posts/16889.html</url>
    <content><![CDATA[<h2 id="登录注册"><a href="#登录注册" class="headerlink" title="登录注册"></a>登录注册</h2><p>github一般在白天是可以直接访问的，不需要挂梯子，晚上一般需要vpn才能打开。</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028220559829-1152733958.png" alt="" style="zoom:80%;">

<p>注册按照引导完成就可以了</p>
<h2 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h2><p>主页功能和布局</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028221006171-743174652.png"></p>
<h2 id="项目仓库"><a href="#项目仓库" class="headerlink" title="项目仓库"></a>项目仓库</h2><h3 id="仓库视图"><a href="#仓库视图" class="headerlink" title="仓库视图"></a>仓库视图</h3><p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028221134829-1693496522.png"></p>
<h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028221350538-55724732.png" alt="" style="zoom:67%;">

<h3 id="仓库主页"><a href="#仓库主页" class="headerlink" title="仓库主页"></a>仓库主页</h3><p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028221749777-1044325588.png"></p>
<h3 id="如何克隆项目代码"><a href="#如何克隆项目代码" class="headerlink" title="如何克隆项目代码"></a>如何克隆项目代码</h3><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028221857033-1672524206.png" alt="" style="zoom:50%;">

<p>克隆项目代码：</p>
<blockquote>
<p>前置条件：安装Git</p>
</blockquote>
<p><code>git下载</code>链接：<a href="https://wwp.lanzoub.com/iZj1H0erefja">Git-2.38.1-64-bit.exe - 蓝奏云 (lanzoub.com)</a></p>
<p> <code>git安装配置</code>教程：<a href="https://blog.csdn.net/mukes/article/details/115693833">Git 详细安装教程（详解 Git 安装过程的每一个步骤）</a></p>
<p> <code>图解git原理</code>：<a href="http://marklodato.github.io/visual-git-guide/index-zh-cn.html">图解Git (marklodato.github.io)</a></p>
<p> 进入cmd</p>
 <img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028222357121-312629687.png" alt="" style="zoom:50%;">

<p> 然后输入<code>git clone 项目地址</code></p>
 <img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221028222449229-753777455.png" alt="" style="zoom:67%;">

<p> <code>上传代码和文件到github</code>参考教程：<a href="https://www.cnblogs.com/ranxi169/p/16717225.html">Git将本地仓库上传到github - 孤飞 - 博客园 (cnblogs.com)</a></p>
<h2 id="导入项目到IDE"><a href="#导入项目到IDE" class="headerlink" title="导入项目到IDE"></a>导入项目到<strong>IDE</strong></h2><p>以JetBrain的PyCharm为例：</p>
<h3 id="在起始页面下"><a href="#在起始页面下" class="headerlink" title="在起始页面下"></a>在起始页面下</h3><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029100526155-1605600821.png" alt="" style="zoom:50%;">

<p>填写github仓库地址，然后点击clone</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029100805192-274045963.png" alt="" style="zoom: 50%;">

<h3 id="项目内页"><a href="#项目内页" class="headerlink" title="项目内页"></a>项目内页</h3><p>在<code>VCS</code>-<code>Get from Version Control</code>导入github项目</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029101409506-1968971885.png" alt="" style="zoom:50%;">

<p>下载完项目仓库后会弹出一个对话框，自选</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029101705918-852571062.png" alt="" style="zoom:50%;">

<p>如果初始化或者导入为一个github项目之后就可以使用版本控制工具了</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029102213782-1729938436.png" alt="" style="zoom:50%;">

<p>在IDE集成开发环境中就不需要用命令行提交代码了，直接点击就好</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029102411820-86730732.png" alt="" style="zoom: 67%;">

<h2 id="关于协作"><a href="#关于协作" class="headerlink" title="关于协作"></a>关于协作</h2><h3 id="添加合作者"><a href="#添加合作者" class="headerlink" title="添加合作者"></a>添加合作者</h3><p>在github打开指定项目进入<code>setting</code></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029102623122-291804960.png"></p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029102742971-1054957020.png" alt="" style="zoom:80%;">

<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029102834346-1533711273.png" alt="" style="zoom:80%;">

<p>被邀请者需要进入这个github仓库网页【项目仓库主页顶部一行蓝色的邀请函】选择<code>接受邀请</code></p>
<p>接受邀请后就可以push了</p>
<p>push之前需要在ide登录自己的github账号</p>
<p>教程：<a href="https://blog.csdn.net/lxd13699/article/details/80375038">Pycharm+github上传及提交代码_你是太阳暖人心的博客-CSDN博客</a></p>
<p>也就是File-setting配置git和github账号</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103348325-1377369698.png" alt="" style="zoom: 67%;">

<h3 id="其中git配置"><a href="#其中git配置" class="headerlink" title="其中git配置"></a>其中git配置</h3><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103432765-1705655237.png" alt="" style="zoom:67%;">

<h3 id="其中Github登录"><a href="#其中Github登录" class="headerlink" title="其中Github登录"></a>其中Github登录</h3><p>在github个人主页中选择Setting</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103702211-1141201815.png" alt="" style="zoom: 67%;">

<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103804838-56805198.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103952162-657527512.png"></p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029104054155-1404753885.png" alt="" style="zoom:80%;">

<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029104424210-625718386.png"></p>
<p>在Pycahrm中登录</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029103517201-381822925.png" alt="" style="zoom:67%;">

<p>直接点击<code>Generate</code>也可以获取相应权限登Token，而且更快</p>
<img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221221160054524-486268715.png" style="zoom: 67%;">

<h2 id="使用github和git的常见问题"><a href="#使用github和git的常见问题" class="headerlink" title="使用github和git的常见问题"></a>使用github和git的常见问题</h2><h3 id="push失败"><a href="#push失败" class="headerlink" title="push失败"></a>push失败</h3><p>push失败一般是由于github连接超时导致的</p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029105106245-328292962.png" alt="" style="zoom:67%;">

<p>解决方法有</p>
<ol>
<li>关闭重启编辑器ide</li>
<li>关闭或打开clash代理</li>
<li>在终端中输入以下代码</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.sslVerify <span class="token string">"false"</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.sslVerify <span class="token string">"false"</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy 
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>其实更加有用的解决方案是：</p>
<p><a href="https://www.cnblogs.com/ranxi169/p/16956050.html">彻底解决github update push超时 - 孤飞 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Python数据分析教程（二）：Pandas</title>
    <url>/posts/13141.html</url>
    <content><![CDATA[<h2 id="Pandas介绍"><a href="#Pandas介绍" class="headerlink" title="Pandas介绍"></a>Pandas介绍</h2><h3 id="Pandas导入"><a href="#Pandas导入" class="headerlink" title="Pandas导入"></a><strong>Pandas导入</strong></h3><ul>
<li>Pandas是Python第三方库，提供高性能易用数据类型和分析工具</li>
<li>Pandas基于NumPy实现，常与NumPy和Matplotlib一同使用</li>
<li>两个数据类型：Series, DataFrame</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="Pandas与numpy的比较"><a href="#Pandas与numpy的比较" class="headerlink" title="Pandas与numpy的比较"></a><strong>Pandas</strong>与numpy的比较</h3><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204036490-294398481.png"></p>
<h2 id="Pandas的Series类型"><a href="#Pandas的Series类型" class="headerlink" title="Pandas的Series类型"></a><strong>Pandas的Series类型</strong></h2><p>由一组数据及与之相关的数据索引组成</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204224581-494169725.png"></p>
<h3 id="Pandas的Series类型的创建"><a href="#Pandas的Series类型的创建" class="headerlink" title="Pandas的Series类型的创建"></a><strong>Pandas的Series类型的创建</strong></h3><p>Series类型可以由如下类型创建：</p>
<ul>
<li>Python列表，index与列表元素个数一致</li>
<li>标量值，index表达Series类型的尺寸</li>
<li>Python字典，键值对中的“键”是索引，index从字典中进行选择操作</li>
<li>ndarray，索引和数据都可以通过ndarray类型创建</li>
<li>其他函数，range()函数等</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204306537-1503027646.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204534311-1927277320.png"></p>
<h3 id="Pandas的Series类型的基本操作"><a href="#Pandas的Series类型的基本操作" class="headerlink" title="Pandas的Series类型的基本操作"></a><strong>Pandas的Series类型的基本操作</strong></h3><p>Series类型包含index和values两个部分：</p>
<ul>
<li>index 获得索引</li>
<li>values 获得数据</li>
</ul>
<p>由ndarray或字典创建的Series，操作类似ndarray或字典类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204858056-644012635.png"></p>
<h2 id="pandas的DataFrame类型"><a href="#pandas的DataFrame类型" class="headerlink" title="pandas的DataFrame类型"></a><strong>pandas的DataFrame类型</strong></h2><ul>
<li><p>DataFrame类型由共用相同索引的一组列组成</p>
</li>
<li><p>DataFrame是一个表格型的数据类型，每列值类型可以不同</p>
</li>
<li><p>DataFrame既有行索引、也有列索引</p>
</li>
<li><p>DataFrame常用于表达二维数据，但可以表达多维数据</p>
</li>
<li><p>DataFrame是二维带“标签”数组</p>
</li>
<li><p>DataFrame基本操作类似Series，依据行列索引</p>
</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205139067-819109186.png"></p>
<h3 id="pandas的DataFrame类型创建"><a href="#pandas的DataFrame类型创建" class="headerlink" title="pandas的DataFrame类型创建"></a><strong>pandas的DataFrame类型创建</strong></h3><p>DataFrame类型可以由如下类型创建：</p>
<ul>
<li>二维ndarray对象</li>
<li>由一维ndarray、列表、字典、元组或Series构成的字典</li>
<li>Series类型</li>
<li>其他的DataFrame类型</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205306000-1512929844.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205403500-1728575625.png"></p>
<h3 id="Pandas的Dataframe类型的基本操作"><a href="#Pandas的Dataframe类型的基本操作" class="headerlink" title="Pandas的Dataframe类型的基本操作"></a><strong>Pandas的Dataframe类型的基本操作</strong></h3><h4 id="pandas索引操作"><a href="#pandas索引操作" class="headerlink" title="pandas索引操作"></a><strong>pandas索引操作</strong></h4><h5 id="pandas重新索引"><a href="#pandas重新索引" class="headerlink" title="pandas重新索引"></a><strong>pandas重新索引</strong></h5><p>reindex()能够改变或重排Series和DataFrame索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205722764-2087213798.png"></p>
<p>reindex(index=None, columns=None, …)的参数</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205810608-1806112533.png"></p>
<p><strong>pandas删除索引</strong></p>
<p>drop()能够删除Series和DataFrame指定行或列索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210003320-843812767.png"></p>
<h4 id="pandas数据运算"><a href="#pandas数据运算" class="headerlink" title="pandas数据运算"></a><strong>pandas数据运算</strong></h4><ul>
<li>算术运算根据行列索引，补齐后运算，运算默认产生浮点数</li>
<li>补齐时缺项填充NaN (空值)</li>
<li>二维和一维、一维和零维间为广播运算</li>
<li>采用+ ‐ * /符号进行的二元运算产生新的对象</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210126120-1408047150.png"></p>
<h5 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h5><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210234171-1672958996.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210300650-988503635.png"></p>
<ul>
<li>不同维度间为广播运算，一维Series默认在轴1参与运算</li>
<li>使用运算方法可以令一维Series参与轴0运算</li>
</ul>
<h2 id="Pandas数据分析"><a href="#Pandas数据分析" class="headerlink" title="Pandas数据分析"></a><strong>Pandas数据分析</strong></h2><h3 id="Pandas导入与导出数据"><a href="#Pandas导入与导出数据" class="headerlink" title="Pandas导入与导出数据"></a><strong>Pandas导入与导出数据</strong></h3><h4 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h4><p>pd.read_csv(filename)：从CSV文件导入数据</p>
<p>pd.read_table(filename)：从限定分隔符的文本文件导入数据</p>
<p>pd.read_excel(filename)：从Excel文件导入数据</p>
<p>pd.read_sql(query, connection_object)：从SQL表/库导入数据</p>
<p>pd.read_json(json_string)：从JSON格式的字符串导入数据</p>
<p>pd.read_html(url)：解析URL、字符串或者HTML文件，抽取其中的tables表格</p>
<p>pd.read_clipboard()：从你的粘贴板获取内容，并传给read_table()</p>
<p>pd.DataFrame(dict)：从字典对象导入数据，Key是列名，Value是数据</p>
<h4 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h4><p>df.to_csv(filename)：导出数据到CSV文件</p>
<p>df.to_excel(filename)：导出数据到Excel文件</p>
<p>df.to_sql(table_name, connection_object)：导出数据到SQL表</p>
<p>df.to_json(filename)：以Json格式导出数据到文本文件</p>
<h3 id="Pandas查看、检查数据"><a href="#Pandas查看、检查数据" class="headerlink" title="Pandas查看、检查数据"></a><strong>Pandas查看、检查数据</strong></h3><p>df.head(n)：查看DataFrame对象的前n行</p>
<p>df.tail(n)：查看DataFrame对象的最后n行</p>
<p>df.shape()：查看行数和列数</p>
<p>df.info()：查看索引、数据类型和内存信息</p>
<p>df.describe()：查看数值型列的汇总统计</p>
<p>s.value_counts(dropna=False)：查看Series对象的唯一值和计数</p>
<p>df.apply(pd.Series.value_counts)：查看DataFrame对象中每一列的唯一值和计数</p>
<h3 id="Pandas数据选取"><a href="#Pandas数据选取" class="headerlink" title="Pandas数据选取"></a><strong>Pandas数据选取</strong></h3><p>df[col]：根据列名，并以Series的形式返回列</p>
<p>df[[col1, col2]]：以DataFrame形式返回多列</p>
<p>s.iloc[0]：按位置选取数据</p>
<p>s.loc[‘index_one’]：按索引选取数据</p>
<p>df.iloc[0,:]：返回第一行</p>
<p>df.iloc[0,0]：返回第一列的第一个元素</p>
<h3 id="pandas数据清理"><a href="#pandas数据清理" class="headerlink" title="pandas数据清理"></a><strong>pandas数据清理</strong></h3><p>df.columns = [‘a’,’b’,’c’]：重命名列名</p>
<p>pd.isnull()：检查DataFrame对象中的空值，并返回一个Boolean数组</p>
<p>pd.notnull()：检查DataFrame对象中的非空值，并返回一个Boolean数组</p>
<p>df.dropna()：删除所有包含空值的行</p>
<p>df.dropna(axis=1)：删除所有包含空值的列</p>
<p>df.dropna(axis=1,thresh=n)：删除所有小于n个非空值的行</p>
<p>df.fillna(x)：用x替换DataFrame对象中所有的空值</p>
<p>s.astype(float)：将Series中的数据类型更改为float类型</p>
<p>s.replace(1,’one’)：用‘one’代替所有等于1的值</p>
<p>s.replace([1,3],[‘one’,’three’])：用’one’代替1，用’three’代替3</p>
<p>df.rename(columns=lambda x: x + 1)：批量更改列名</p>
<p>df.rename(columns={‘old_name’: ‘new_ name’})：选择性更改列名</p>
<p>df.set_index(‘column_one’)：更改索引列</p>
<p>df.rename(index=lambda x: x + 1)：批量重命名索引</p>
<h3 id="Pandas数据处理"><a href="#Pandas数据处理" class="headerlink" title="Pandas数据处理"></a><strong>Pandas数据处理</strong></h3><p>df.columns = [‘a’,’b’,’c’]：重命名列名</p>
<p>pd.isnull()：检查DataFrame对象中的空值，并返回一个Boolean数组</p>
<p>pd.notnull()：检查DataFrame对象中的非空值，并返回一个Boolean数组</p>
<p>df.dropna()：删除所有包含空值的行</p>
<p>df.dropna(axis=1)：删除所有包含空值的列</p>
<p>df.dropna(axis=1,thresh=n)：删除所有小于n个非空值的行</p>
<p>df.fillna(x)：用x替换DataFrame对象中所有的空值</p>
<p>s.astype(float)：将Series中的数据类型更改为float类型</p>
<p>s.replace(1,’one’)：用‘one’代替所有等于1的值</p>
<p>s.replace([1,3],[‘one’,’three’])：用’one’代替1，用’three’代替3</p>
<p>df.rename(columns=lambda x: x + 1)：批量更改列名</p>
<p>df.rename(columns={‘old_name’: ‘new_ name’})：选择性更改列名</p>
<p>df.set_index(‘column_one’)：更改索引列</p>
<p>df.rename(index=lambda x: x + 1)：批量重命名索引</p>
<p>df[df[col] &gt; 0.5]：选择col列的值大于0.5的行</p>
<p>df.sort_values(col1)：按照列col1排序数据，默认升序排列</p>
<p>df.sort_values(col2, ascending=False)：按照列col1降序排列数据</p>
<p>df.sort_values([col1,col2], ascending=[True,False])：先按列col1升序排列，后按col2降序排列数据</p>
<p>df.groupby(col)：返回一个按列col进行分组的Groupby对象</p>
<p>df.groupby([col1,col2])：返回一个按多列进行分组的Groupby对象</p>
<p>df.groupby(col1)[col2]：返回按列col1进行分组后，列col2的均值</p>
<p>df.pivot_table(index=col1, values=[col2,col3], aggfunc=max)：创建一个按列col1进行分组，并计算col2和col3的最大值的数据透视表</p>
<p>df.groupby(col1).agg(np.mean)：返回按列col1分组的所有列的均值</p>
<p>data.apply(np.mean)：对DataFrame中的每一列应用函数np.mean</p>
<p>data.apply(np.max,axis=1)：对DataFrame中的每一行应用函数np.max</p>
<h4 id="Pandas数据合并"><a href="#Pandas数据合并" class="headerlink" title="Pandas数据合并"></a><strong>Pandas数据合并</strong></h4><p>df1.append(df2)：将df2中的行添加到df1的尾部</p>
<p>df.concat([df1, df2],axis=1)：将df2中的列添加到df1的尾部</p>
<p>df1.join(df2,on=col1,how=’inner’)：对df1的列和df2的列执行SQL形式的join</p>
<h4 id="Pandas数据统计"><a href="#Pandas数据统计" class="headerlink" title="Pandas数据统计"></a><strong>Pandas数据统计</strong></h4><p>df.describe()：查看数据值列的汇总统计</p>
<p>df.mean()：返回所有列的均值</p>
<p>df.corr()：返回列与列之间的相关系数</p>
<p>df.count()：返回每一列中的非空值的个数</p>
<p>df.max()：返回每一列的最大值</p>
<p>df.min()：返回每一列的最小值</p>
<p>df.median()：返回每一列的中位数</p>
<p>df.std()：返回每一列的标准差</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python数据分析教程（一）：Numpy</title>
    <url>/posts/13140.html</url>
    <content><![CDATA[<h2 id="数据的纬度"><a href="#数据的纬度" class="headerlink" title="数据的纬度"></a>数据的纬度</h2><p>一维数据：列表和集合类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000249971-1418691440.png"></p>
<p>二维数据：列表类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000618175-248885984.png"></p>
<p>多维数据：列表类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000627314-315089200.png"></p>
<p>高维数据：字典类型或数据表示格式，如<code>json</code>、<code>xml</code>、<code>yaml</code></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000636576-992489207.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000320410-1397054611.png"></p>
<p><strong>维度：一组数据的组织形式</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000408689-1436965707.png"></p>
<p><strong>列表和数组</strong>：<strong>一组数据的有序结构</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000446411-1600490984.png"></p>
<h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><h3 id="Numpy介绍"><a href="#Numpy介绍" class="headerlink" title="Numpy介绍"></a>Numpy介绍</h3><ul>
<li><p>NumPy是一个开源的Python科学计算基础库，包含：</p>
<ul>
<li><p>一个强大的N维数组对象ndarray</p>
</li>
<li><p>广播功能函数</p>
</li>
<li><p>整合C/C++/Fortran代码的工具</p>
</li>
<li><p>线性代数、傅里叶变换、随机数生成等功能</p>
</li>
</ul>
</li>
<li><p>NumPy是SciPy、Pandas等数据处理或科学计算库的基础</p>
</li>
</ul>
<p><strong>模块导入：</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="N维数组对象：ndarray"><a href="#N维数组对象：ndarray" class="headerlink" title="N维数组对象：ndarray"></a><strong>N维数组对象：ndarray</strong></h3><ul>
<li><p>数组对象可以去掉元素间运算所需的循环，使一维向量更像单个数据</p>
</li>
<li><p>设置专门的数组对象，经过优化，可以提升这类应用的运算速度————科学计算中，一个维度所有数据的类型往往相同</p>
</li>
<li><p>数组对象采用相同的数据类型，有助于节省运算和存储空间</p>
</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920001445590-1835589251.png"></p>
<h3 id="ndarray实例"><a href="#ndarray实例" class="headerlink" title="ndarray实例"></a><strong>ndarray实例</strong></h3><ul>
<li>ndarray是一个多维数组对象，由两部分构成：<ul>
<li>实际的数据</li>
<li>描述这些数据的元数据（数据维度、数据类型等）</li>
</ul>
</li>
<li>ndarray数组一般要求所有元素类型相同（同质），数组下标从0开始</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920001543215-76244284.png"></p>
<h3 id="ndarray对象的属性"><a href="#ndarray对象的属性" class="headerlink" title="ndarray对象的属性"></a><strong>ndarray对象的属性</strong></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#属性&amp;说明</span>
<span class="token punctuation">.</span>ndim <span class="token comment">#秩，即轴的数量或维度的数量</span>
<span class="token punctuation">.</span>shape <span class="token comment">#ndarray对象的尺度，对于矩阵，n行m列</span>
<span class="token punctuation">.</span>size <span class="token comment">#ndarray对象元素的个数，相当于.shape中n*m的值</span>
<span class="token punctuation">.</span>dtype <span class="token comment">#ndarray对象的元素类型</span>
<span class="token punctuation">.</span>itemsize <span class="token comment">#ndarray对象中每个元素的大小，以字节为单位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002133785-897537873.png"></p>
<h4 id="ndarray的元素类型"><a href="#ndarray的元素类型" class="headerlink" title="ndarray的元素类型"></a><strong>ndarray的元素类型</strong></h4><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002045637-1873947497.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002050016-1829180101.png"></p>
<h3 id="ndarray数组的创建方法"><a href="#ndarray数组的创建方法" class="headerlink" title="ndarray数组的创建方法"></a><strong>ndarray数组的创建方法</strong></h3><ul>
<li>从Python中的列表、元组等类型创建ndarray数组</li>
<li>使用NumPy中函数创建ndarray数组，如：arange, ones, zeros等</li>
<li>从字节流（raw bytes）中创建ndarray数组</li>
<li>从文件中读取特定格式，创建ndarray数组</li>
</ul>
<p><strong>通过列表创建ndarray:</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002306999-2099371921.png"></p>
<p><strong>使用函数创建ndarray:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">#类似range()函数，返回ndarray类型，元素从0到n-1</span>
np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shapes生成一个全l数组，shape是元组类型</span>
np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shape生成一个全数组，shape是元组类型</span>
np<span class="token punctuation">.</span>full<span class="token punctuation">(</span>shape<span class="token punctuation">,</span>val<span class="token punctuation">)</span> <span class="token comment">#根据shape:生成一个数组，每个元素值都是val</span>
np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">#创建一个正方的n*n单位矩阵，对角线为1，其余为0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>ndarray数组的变换:</strong></p>
<p>对于创建后的ndarray数组，可以对其进行维度变换和元素类型变换</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#方法&amp;说明</span>
<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#不改变数组元素，返回一个shape形状的数组，原数组不变</span>
<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#与.reshape()功能一致，但修改原数组</span>
<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span>ax1<span class="token punctuation">,</span>ax2<span class="token punctuation">)</span> <span class="token comment">#将数组n个维度中两个维度进行调换</span>
<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#对数组进行降维，返回折叠后的一维数组，原数组不变</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002943743-1325252769.png"></p>
<p><strong>数组的索引和切片</strong></p>
<ul>
<li>索引：获取数组中特定位置元素的过程</li>
<li>切片：获取数组元素子集的过程</li>
</ul>
<p>一维数组的索引和切片</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003101445-981037972.png"></p>
<p>多维数组索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003139141-484127738.png"></p>
<p>多维数组切片</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003159689-806595432.png"></p>
<h3 id="ndarray数组的运算"><a href="#ndarray数组的运算" class="headerlink" title="ndarray数组的运算"></a><strong>ndarray数组的运算</strong></h3><p><strong>NumPy一元函数:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的绝对值</span>
np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的平方根</span>
np<span class="token punctuation">.</span>square<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的平方</span>
np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>1og10<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>1og2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的自然对数、10底对数和2底对数</span>
np<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的ceiling值或f1oor值</span>
np<span class="token punctuation">.</span>rint<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的四舍五入值</span>
np<span class="token punctuation">.</span>modf<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#将数组各元素的小数和整数部分以两个独立数组形式返回</span>
np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>cosh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>sinh<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的普通型和双曲型三角函数</span>
np<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的指数值</span>
np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的符号值，1(+)，0，-1(-)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>NumPy二元函数:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
<span class="token operator">+</span> <span class="token operator">-</span> <span class="token operator">*</span> <span class="token operator">/</span> <span class="token operator">**</span> <span class="token comment">#两个数组各元素进行对应运算</span>
np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fmin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#元素级的最大值/最小值计算</span>
np<span class="token punctuation">.</span>mod<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment">#元素级的模运算</span>
np<span class="token punctuation">.</span>copysign<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment">#将数组y中各元素值的符号赋值给数组x对应元素</span>
<span class="token operator">&gt;</span><span class="token operator">&lt;</span> <span class="token operator">&gt;=</span> <span class="token operator">&lt;=</span> <span class="token operator">==</span> <span class="token operator">!=</span> <span class="token comment">#算术比较，产生布尔型数组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>Numpy数据存取:</strong></p>
<p>csv格式:</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920004240502-1839875867.png"></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>array<span class="token punctuation">,</span>fmt<span class="token operator">=</span><span class="token string">'%.18e'</span><span class="token punctuation">,</span>delimiter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>frame：文件、字符串或产生器，可以是.gz或.bz2的压缩文件</li>
<li>array:存入文件的数组</li>
<li>fmt:写入文件的格式，例如：%d%.2f%.18e</li>
<li>delimiter:分割字符串，默认是任何空格</li>
</ul>
<p>其他：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">,</span>delimiter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li>frame:文件、字符串或产生器，可以是.gz或.bz2的压缩文件</li>
<li>dtype:数据类型，可选</li>
<li>delimiter:分割字符串，默认是任何空格</li>
<li>unpack:如果True,读入属性将分别写入不同变量</li>
</ul>
<p>其他：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token punctuation">.</span>tofile<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">,</span> count<span class="token operator">=</span>‐<span class="token number">1</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>numpy随机数函数子库:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
rand<span class="token punctuation">(</span>d0<span class="token punctuation">,</span>d1<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>dn<span class="token punctuation">)</span> <span class="token comment">#根据d0-dn创建随机数数组，浮点数，[0,1)，均匀分布</span>
randn<span class="token punctuation">(</span>d0<span class="token punctuation">,</span>d1<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>dn<span class="token punctuation">)</span> <span class="token comment">#根据d0-dn创建随机数数组，标准正态分布</span>
randint<span class="token punctuation">(</span>low<span class="token punctuation">[</span><span class="token punctuation">,</span>high<span class="token punctuation">,</span>shape<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#根据shapet创建随机整数或整数数组，范围是[low,high)</span>
seed<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">#随机数种子，s是给定的种子值</span>
shuffle<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#根据数组a的第1轴进行随排列，改变数组×</span>
permutation<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#根据数组a的第1轴产生一个新的乱序数组，不改变数组x</span>
choice<span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>replace<span class="token punctuation">,</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#从一维数组a中以概率p抽取元素，形成size形状新数组 replace表示是否可以重用元素，默认为False</span>
uniform<span class="token punctuation">(</span>low<span class="token punctuation">,</span>high<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有均匀分布的数组，low起始值，high结束值，size形状</span>
normal<span class="token punctuation">(</span>loc<span class="token punctuation">,</span>scale<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有正态分布的数组，loc均值，scale标准差，size形状</span>
poisson<span class="token punctuation">(</span>lam<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有泊松分布的数组，lam随机事件发生率，size形状</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>numpy统计函数:</strong></p>
<pre class="line-numbers language-none"><code class="language-none">np.*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
<span class="token builtin">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素之和，axis整数或元组</span>
mean<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的期望，axis整数或元组</span>
average<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>weights<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的加权平均值</span>
std<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的标准差</span>
var<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的方差</span>
<span class="token builtin">min</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素的最小值、最大值</span>
argmin<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
argmax<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素最小值、最大值的降一维后下标</span>
unravel_index<span class="token punctuation">(</span>index<span class="token punctuation">,</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shape?将一维下标index转换成多维下标</span>
ptp<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素最大值与最小值的差</span>
median<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素的中位数（中值）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>numpy替换函数:</strong></p>
<ul>
<li>np.where(condition, x, y) ——满足条件(condition)，输出x，不满足输出y。</li>
<li>只有条件 (condition)，没有x和y，则输出满足条件 (即非0) 元素的坐标 (等价于numpy.nonzero)</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920005642662-1268532120.png"></p>
<h3 id="numpy数据存取与函数"><a href="#numpy数据存取与函数" class="headerlink" title="numpy数据存取与函数**"></a><strong>numpy</strong>数据存取与函数**</h3><p>CSV文件</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>多维数据存取</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token punctuation">.</span>tofile<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>随机函数</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>一个100%立即获得New bing资格的方法教程-点击就送bing chat</title>
    <url>/posts/16891.html</url>
    <content><![CDATA[<p>之前加入waitlist的账号一个多月过去了还没有任何反应，但是身边朋友却“点击就送”？</p>
<p>深入调查后发现原来是IP的影响，相信说到这里就已经有人知道该怎么做了</p>
<p>方法：</p>
<ol>
<li>将节点IP更换为日本全局（不会换ip的看这个<a href="https://blog.onefly.top/posts/16888.html">简易教程</a>)</li>
</ol>
<p><img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230312113249267-1194007670.png"></p>
<ol start="2">
<li>进入new bing 申请网站点击立即加入</li>
</ol>
<p><img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230312113536042-1695660571.png"></p>
<p>之后就可以直接在bing搜索中开启聊天了<br><a href="https://www.bing.com/?/ai">https://www.bing.com/?/ai</a><br>其他建议：先退账号，删除注册表，vpn登录国外邮箱，现在秒成功<br>其他方案：<a href="https://mp.weixin.qq.com/s/MW7hdkhfixveEr48UUd16A">https://mp.weixin.qq.com/s/MW7hdkhfixveEr48UUd16A</a></p>
]]></content>
      <categories>
        <category>前沿技术</category>
      </categories>
      <tags>
        <tag>技术分享</tag>
        <tag>AI</tag>
        <tag>人工智能</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenAI推出超神Chatgpt注册教程来了|Gmail外国手机短信验证码接码</title>
    <url>/posts/16890.html</url>
    <content><![CDATA[<p><img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206113426088-1538964752.png"></p>
<p>前几天，OpenAI 推出超神 ChatGPT，非常火爆。但是呢，因为不可抗力原因，大部分人无法体验到。这里我分享一下注册的攻略。</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul>
<li>首先能能访问 Google（前置条件，不能明确说，懂得都懂）<ul>
<li>——<a href="https://blog.onefly.top/posts/16888.html">翻墙使用chatgpt| 孤飞的博客 (onefly.top)</a></li>
</ul>
</li>
<li>你得有一个国外手机号，GV 号肯定不行。<ul>
<li>如果你没有国外手机号，推荐sms-activate.org</li>
</ul>
</li>
</ul>
<h3 id="注册短信平台并充值"><a href="#注册短信平台并充值" class="headerlink" title="注册短信平台并充值"></a>注册短信平台并充值</h3><ul>
<li>先行注册<a href="https://sms-activate.org/cn?ref=2713386">在线接受短信的虚拟号码 - SMS-Activate</a></li>
<li>注册好之后进行对应的充值</li>
</ul>
<p><img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206205019057-724465341.png"></p>
<p> 接码费用一次为 10.5 卢布，大约1.2 人民币。因为充值默认为美元，可以选择充值 1 美元进去，</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c507b1564d1442d8dfab0ebc8d481e1~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp"></p>
<h3 id="注册OpenAI账号"><a href="#注册OpenAI账号" class="headerlink" title="注册OpenAI账号"></a>注册OpenAI账号</h3><ul>
<li><p>打开</p>
<p><a href="http://beta.openai.com/signup">openai 注册</a>页面进行相应的注册。</p>
<ul>
<li>这里同样需要你能访问Google且 ip 不是香港，最好是<strong>韩国</strong>、美国、新加坡等等，不然会提示不能在当前国家服务。</li>
</ul>
</li>
<li><p>注册成功进入下面填写手机号的页面</p>
<ul>
<li><strong>填写手机号要去掉国家区号</strong>，区号是直接通过选择国家输入的，比如印度的91</li>
</ul>
</li>
</ul>
<img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206113639579-526919807.png" alt="" style="zoom:50%;">

<h3 id="准备接码"><a href="#准备接码" class="headerlink" title="准备接码"></a>准备接码</h3><blockquote>
<p>这里需要注意下的就是，只有巴西和印度、印度尼西亚剩余的手机号较多，可以支持了，之前我选的印尼，是可以收到码的。</p>
</blockquote>
<img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206121459513-617669672.png" alt="" style="zoom: 67%;">

<p><img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206210059526-792187119.png"></p>
<ul>
<li>然后再刚刚填写手机号码的页面填入申请的手机号</li>
</ul>
<h3 id="开始使用ChatGPT"><a href="#开始使用ChatGPT" class="headerlink" title="开始使用ChatGPT"></a>开始使用ChatGPT</h3><p>注册完后，我们去ChatGPT网站去登陆。<a href="https://link.juejin.cn/?target=https://chat.openai.com/auth/login">chat.openai.com/auth/login</a></p>
<p><img src="https://img2023.cnblogs.com/blog/2910984/202212/2910984-20221206113849817-1245117364.png"></p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>解码</tag>
        <tag>美国</tag>
      </tags>
  </entry>
  <entry>
    <title>我们应该为Copilot X 的到来做好什么准备？</title>
    <url>/posts/16892.html</url>
    <content><![CDATA[<h1 id="申请github-copilot学生认证以及Jetbrain专业版学生教育免费教程-申请加入Copilot-X-Waitlist"><a href="#申请github-copilot学生认证以及Jetbrain专业版学生教育免费教程-申请加入Copilot-X-Waitlist" class="headerlink" title="申请github copilot学生认证以及Jetbrain专业版学生教育免费教程+申请加入Copilot X Waitlist."></a>申请github copilot学生认证以及Jetbrain专业版学生教育免费教程+申请加入Copilot X Waitlist.</h1><h2 id="教程概览"><a href="#教程概览" class="headerlink" title="教程概览"></a>教程概览</h2><p>1.学信网下载学籍认证pdf</p>
<p>2.acrobat修改部分中文为英文</p>
<p>3.修改github profile更改个人真实信息</p>
<p>3.github education认证学生身份</p>
<p>4.去github删除掉学生邮箱</p>
<p>5.去jetbrain网站用github学生包申请学生免费使用</p>
<h2 id="学籍证明"><a href="#学籍证明" class="headerlink" title="学籍证明"></a>学籍证明</h2><p>进入学籍查询页面:<a href="https://my.chsi.com.cn/archive/bab/index.action">学信档案 (chsi.com.cn)</a></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325200401242-1573147258.png" style="zoom:50%;">

<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325200531503-986496590.png" style="zoom:50%;">

<p>下载完成后使用可以编辑pdf的软件打开，建议<a href="https://www.superso.top/Adobe/Adobe_Acrobat_Pro_DC_2022.html">Acrobat DC</a></p>
<p>按照如下要求更改：需要修改姓名 院校 形式 学籍状态 查询时间</p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325200848336-1864084922.png" style="zoom: 50%;">

<h2 id="修改Github-Profile"><a href="#修改Github-Profile" class="headerlink" title="修改Github Profile"></a>修改Github Profile</h2><p>修改个人信息profile地址：<a href="https://github.com/settings/profile">github.com</a></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325201439599-667522946.png" style="zoom:50%;">

<h2 id="申请认证"><a href="#申请认证" class="headerlink" title="申请认证"></a>申请认证</h2><p>认证地址：<a href="https://education.github.com/discount_requests/application">Request a discount - GitHub Education</a></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325202044639-406144827.png" style="zoom:50%;">

<p>下一步，就是上传证明文件，建议用<strong>手机拍照</strong>上传，也就是手机进入上述网页申请。（由于我已经认证完了这里没有图。）</p>
<blockquote>
<p>有几点要注意的：</p>
<p>1、要用摄像头拍。如果上传的话他会拒绝，说上传的操作空间大，拍照比较可靠。如果电脑不方便可以用手机拍。</p>
<p>2、证明类型。我就填的student ID是可以的。</p>
<p>3、学籍证明。在学信网申请学籍认证就好了，也很快，几分钟就搞定了。这里要注意要英文的，所以用浏览器翻译一下就好了，电脑上打开，手机对着拍张照就ok。</p>
<p>4、位置。最好在学校里，因为申请它会看location，我前几次一直因为location被机验就不通过，弄了一下午。</p>
<p>5、个人信息。一定要填的真诚，头像用真人头像，简介，地区也写一写。</p>
<p>大概就是这些都弄好，然后多申请几次，申请拒绝他会告诉你哪里没弄好，照着说的去做就好了。不过申请也搞了一下午，主要是网不好，机验不通过。<br>原文链接：<a href="https://blog.csdn.net/weixin_41753316/article/details/127039448">https://blog.csdn.net/weixin_41753316/article/details/127039448</a></p>
</blockquote>
<h2 id="申请Jetbrain学生免费许可证"><a href="#申请Jetbrain学生免费许可证" class="headerlink" title="申请Jetbrain学生免费许可证"></a>申请Jetbrain学生免费许可证</h2><p>由于如果在github添加了学生edu邮箱会被block（白嫖的太多了）</p>
<p>所以在github主页中删除edu邮箱（没事以后还可以加回来）：<a href="https://github.com/settings/emails">Email settings (github.com)</a></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325202513795-445937298.png" style="zoom: 67%;">

<p>然后去jetbrain官网使用认证通过的github账号授权申请就好了：<a href="https://www.jetbrains.com/shop/eform/students/">JetBrains 学习产品</a></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230325202634653-1992779395.png" style="zoom:50%;">

<h2 id="加入Copilot-X-Wailist"><a href="#加入Copilot-X-Wailist" class="headerlink" title="加入Copilot X Wailist"></a>加入Copilot X Wailist</h2><p>上一代的 GitHub Copilot，在协助开发者完成编程任务时，便有着极其出色的体验。诞生至今两年，便自动生成了 46% 的代码，更将编码速度提高了 55%。</p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230326102547435-1201350013.png" style="zoom: 50%;">

<p>此次更新的 GitHub Copilot X，又给我们带来了哪些惊喜呢？请看：</p>
<ol>
<li>集成了 GPT-4（微软亲儿子，必须安排上）；</li>
<li>GitHub Copilot Chat（边写代码边跟 AI 对话）；</li>
<li>Copilot for Pull Requests（AI 协助处理 PR）；</li>
<li>Copilot for Docs（智能文档系统）；</li>
<li>Copilot for CLI（让命令行用起来更智能）。</li>
<li>Copilot Voice（直接语音生成代码，牛逼！）；</li>
</ol>
<p>申请进入Copilot X Waitlist：<a href="https://github.com/github-copilot/chat_waitlist_signup/join">GitHub · Where software is built</a></p>
<p>申请进入Copilot CLI Waitlist：<a href="https://githubnext.com/projects/copilot-cli">GitHub Next | Copilot for CLI</a></p>
<p>申请进入Copilot Voice Waitlist：<a href="https://githubnext.com/projects/copilot-voice">GitHub Next | Copilot Voice</a></p>
<p>有关Copilot X的介绍请看这篇文章：<a href="https://zhuanlan.zhihu.com/p/616250941">动动嘴，就能帮你生成代码！焕然一新的代码编辑器：GitHub Copilot X，来了！ - 知乎 (zhihu.com)</a></p>
]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>AI</tag>
        <tag>Copilot X</tag>
      </tags>
  </entry>
  <entry>
    <title>第一行代码Android（第3版）pdf</title>
    <url>/posts/43427.html</url>
    <content><![CDATA[<p>2020年人民邮电出版社出版的图书<br>《第一行代码Android（第3版）》是2020年4月人民邮电出版社出版的图书，作者是郭霖。</p>
<p>封面：<br><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920083910008-28177591.png"></p>
<p>内容简介：<br>《第一行代码 Android 第3版》被Android开发者誉为“Android学习第一书”。全书系统全面、循序渐进地介绍了Android软件开发的必备知识、经验和技巧。<br>《第一行代码 Android 第3版》基于Android 10.0对第2版进行了全面更新，不仅将所有知识点都在Android 10.0系统上进行了重新适配，同时加入Kotlin语言的全面讲解，使用Kotlin对全书代码进行重写，而且还介绍了最新系统特性以及Jetpack架构组件的使用，使本书更加实用。<br>《第一行代码 Android 第3版》内容通俗易懂，由浅入深，既是Android初学者的入门必备，也是Android开发者的进阶首选。 </p>
<p>下载地址：<a href="https://wwp.lanzoub.com/iNBcu0bh15xi">https://wwp.lanzoub.com/iNBcu0bh15xi</a></p>
<p>资源来自于互联网，如分享有损你的权益，请私信我删除！</p>
]]></content>
      <categories>
        <category>电子书</category>
      </categories>
      <tags>
        <tag>电子书</tag>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>投资学博迪第十版.pdf下载</title>
    <url>/posts/15785.html</url>
    <content><![CDATA[<p>作者：（美）滋维&amp;middot;博迪（Zvi Bodie）,（美）亚历克斯&amp;middot;凯恩（Alex Kane）,（美）艾伦J.马库斯（Alan J.Marcus）</p>
<p>出版社：<a href="http://www.txtepub.com/tag/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E4%B8%9A%E5%87%BA%E7%89%88%E7%A4%BE">机械工业出版社</a></p>
格式: PDF

<p>封面：</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920083837829-995145796.png"></p>
<p>下载链接：扫描下方<u>二维码</u>关注<code>公众号</code>并回复<code>投资学</code>免费下载</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221014121626471-157482862.png"></p>
<p>资源来自于互联网，如分享有损你的权益，请联系我删除！</p>
]]></content>
      <categories>
        <category>电子书</category>
      </categories>
      <tags>
        <tag>电子书</tag>
        <tag>经管</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Google学术科研|简易clash使用教程</title>
    <url>/posts/16888.html</url>
    <content><![CDATA[<p><strong>郑重提醒：严禁用于非法用途！严禁访问非法网站！仅供学术科研使用！</strong></p>
<h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>1.<strong>电脑</strong>：第一步下载clash软件、第二步注册节点网站</p>
<p>中文版<code>clash电脑版</code>下载链接：<a href="https://wwp.lanzoub.com/i7FB10dicexg">Clash.for.Windows.Setup.0.20.5.exe - 蓝奏云 (lanzoub.com)</a></p>
<p><em>附：github汉化仓库地址：<a href="https://github.com/ender-zhao/Clash-for-Windows_Chinese/releases">Releases · ender-zhao/Clash-for-Windows_Chinese (github.com)</a></em></p>
<p>软件需要配合<code>机场节点</code>使用</p>
<p>2.<strong>手机</strong>：第一步注册节点网站、购买节点、查看使用文档（下载clash手机版或魔戒app）</p>
<p><code>手机、平板、Mac</code>使用请注册<strong>下面</strong>的<strong>节点网站</strong>后查看<strong>使用教程文档</strong></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202302/2910984-20230216090216307-1364984504.png" style="zoom: 67%;">

<p>注意：华为手机如果纯净模式关不掉请，注册<code>按量订阅</code>网站后下载<code>魔戒手机app</code></p>
<img src="https://img2023.cnblogs.com/blog/2910984/202303/2910984-20230318134752539-719233069.png" style="zoom:67%;">

<h2 id="购买节点"><a href="#购买节点" class="headerlink" title="购买节点"></a>购买节点</h2><p>先购买节点才能配合软件开启代理，订阅链接：<code>[强烈推荐按量订阅]</code></p>
<p><strong>按月订阅</strong>节点<code>8元/月100g</code>：<a href="https://sub.srayx.com/#/register?code=Ly4kohLa">https://sub.srayx.com/#/register?code=Ly4kohLa</a></p>
<p><strong>按量订阅</strong>节点<code>15元/130g</code>不限时长不限使用人数：<a href="https://mojie.me/#/register?code=BdNpTosz">https://mojie.me/#/register?code=BdNpTosz</a></p>
<p>针对上面机场链接有的时候打不开，我们可以先用免费节点挂上代理之后再进入网站购买（要先有魔法才能购买魔法）：<a href="https://pre.paimon.gq/clash.yaml">https://pre.paimon.gq/clash.yaml</a></p>
<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221029111112829-2111008929.png" alt="" style="zoom:50%;">

<p>以按量订阅网站为例：</p>
<p>注册成功后即可进入网站——<code>购买订阅</code>——<code>我的订阅</code>——<code>一键订阅</code>——<code>导入到clash</code></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009185851596-2141791998.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009190732003-1746684250.png"></p>
<p><strong>严禁用于非法用途！仅供学习科研参考使用！</strong></p>
<h2 id="clash简易使用教程"><a href="#clash简易使用教程" class="headerlink" title="clash简易使用教程"></a>clash简易使用教程</h2><p>安装中文版完成后进入主页，选择<code>配置</code></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009172707472-436526400.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009172711191-1171191010.png"></p>
<p>然后选中电脑右下角小猫图标<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009172716039-2117432989.png"></p>
<p>右键勾选系统代理，小猫变成咖啡色即可使用<img src="https://img2022.cnblogs.com/blog/2910984/202210/2910984-20221009172610425-948130714.png"></p>
]]></content>
      <categories>
        <category>资源分享</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
        <tag>软件</tag>
      </tags>
  </entry>
</search>
