<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python数据分析教程（二）：Pandas</title>
    <url>/posts/13141.html</url>
    <content><![CDATA[<h2 id="Pandas介绍"><a href="#Pandas介绍" class="headerlink" title="Pandas介绍"></a>Pandas介绍</h2><h3 id="Pandas导入"><a href="#Pandas导入" class="headerlink" title="Pandas导入"></a><strong>Pandas导入</strong></h3><ul>
<li>Pandas是Python第三方库，提供高性能易用数据类型和分析工具</li>
<li>Pandas基于NumPy实现，常与NumPy和Matplotlib一同使用</li>
<li>两个数据类型：Series, DataFrame</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="Pandas与numpy的比较"><a href="#Pandas与numpy的比较" class="headerlink" title="Pandas与numpy的比较"></a><strong>Pandas</strong>与numpy的比较</h3><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204036490-294398481.png"></p>
<h2 id="Pandas的Series类型"><a href="#Pandas的Series类型" class="headerlink" title="Pandas的Series类型"></a><strong>Pandas的Series类型</strong></h2><p>由一组数据及与之相关的数据索引组成</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204224581-494169725.png"></p>
<h3 id="Pandas的Series类型的创建"><a href="#Pandas的Series类型的创建" class="headerlink" title="Pandas的Series类型的创建"></a><strong>Pandas的Series类型的创建</strong></h3><p>Series类型可以由如下类型创建：</p>
<ul>
<li>Python列表，index与列表元素个数一致</li>
<li>标量值，index表达Series类型的尺寸</li>
<li>Python字典，键值对中的“键”是索引，index从字典中进行选择操作</li>
<li>ndarray，索引和数据都可以通过ndarray类型创建</li>
<li>其他函数，range()函数等</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204306537-1503027646.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204534311-1927277320.png"></p>
<h3 id="Pandas的Series类型的基本操作"><a href="#Pandas的Series类型的基本操作" class="headerlink" title="Pandas的Series类型的基本操作"></a><strong>Pandas的Series类型的基本操作</strong></h3><p>Series类型包含index和values两个部分：</p>
<ul>
<li>index 获得索引</li>
<li>values 获得数据</li>
</ul>
<p>由ndarray或字典创建的Series，操作类似ndarray或字典类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920204858056-644012635.png"></p>
<h2 id="pandas的DataFrame类型"><a href="#pandas的DataFrame类型" class="headerlink" title="pandas的DataFrame类型"></a><strong>pandas的DataFrame类型</strong></h2><ul>
<li><p>DataFrame类型由共用相同索引的一组列组成</p>
</li>
<li><p>DataFrame是一个表格型的数据类型，每列值类型可以不同</p>
</li>
<li><p>DataFrame既有行索引、也有列索引</p>
</li>
<li><p>DataFrame常用于表达二维数据，但可以表达多维数据</p>
</li>
<li><p>DataFrame是二维带“标签”数组</p>
</li>
<li><p>DataFrame基本操作类似Series，依据行列索引</p>
</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205139067-819109186.png"></p>
<h3 id="pandas的DataFrame类型创建"><a href="#pandas的DataFrame类型创建" class="headerlink" title="pandas的DataFrame类型创建"></a><strong>pandas的DataFrame类型创建</strong></h3><p>DataFrame类型可以由如下类型创建：</p>
<ul>
<li>二维ndarray对象</li>
<li>由一维ndarray、列表、字典、元组或Series构成的字典</li>
<li>Series类型</li>
<li>其他的DataFrame类型</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205306000-1512929844.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205403500-1728575625.png"></p>
<h3 id="Pandas的Dataframe类型的基本操作"><a href="#Pandas的Dataframe类型的基本操作" class="headerlink" title="Pandas的Dataframe类型的基本操作"></a><strong>Pandas的Dataframe类型的基本操作</strong></h3><h4 id="pandas索引操作"><a href="#pandas索引操作" class="headerlink" title="pandas索引操作"></a><strong>pandas索引操作</strong></h4><h5 id="pandas重新索引"><a href="#pandas重新索引" class="headerlink" title="pandas重新索引"></a><strong>pandas重新索引</strong></h5><p>reindex()能够改变或重排Series和DataFrame索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205722764-2087213798.png"></p>
<p>reindex(index=None, columns=None, …)的参数</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920205810608-1806112533.png"></p>
<p><strong>pandas删除索引</strong></p>
<p>drop()能够删除Series和DataFrame指定行或列索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210003320-843812767.png"></p>
<h4 id="pandas数据运算"><a href="#pandas数据运算" class="headerlink" title="pandas数据运算"></a><strong>pandas数据运算</strong></h4><ul>
<li>算术运算根据行列索引，补齐后运算，运算默认产生浮点数</li>
<li>补齐时缺项填充NaN (空值)</li>
<li>二维和一维、一维和零维间为广播运算</li>
<li>采用+ ‐ * /符号进行的二元运算产生新的对象</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210126120-1408047150.png"></p>
<h5 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h5><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210234171-1672958996.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920210300650-988503635.png"></p>
<ul>
<li>不同维度间为广播运算，一维Series默认在轴1参与运算</li>
<li>使用运算方法可以令一维Series参与轴0运算</li>
</ul>
<h2 id="Pandas数据分析"><a href="#Pandas数据分析" class="headerlink" title="Pandas数据分析"></a><strong>Pandas数据分析</strong></h2><h3 id="Pandas导入与导出数据"><a href="#Pandas导入与导出数据" class="headerlink" title="Pandas导入与导出数据"></a><strong>Pandas导入与导出数据</strong></h3><h4 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h4><p>pd.read_csv(filename)：从CSV文件导入数据</p>
<p>pd.read_table(filename)：从限定分隔符的文本文件导入数据</p>
<p>pd.read_excel(filename)：从Excel文件导入数据</p>
<p>pd.read_sql(query, connection_object)：从SQL表/库导入数据</p>
<p>pd.read_json(json_string)：从JSON格式的字符串导入数据</p>
<p>pd.read_html(url)：解析URL、字符串或者HTML文件，抽取其中的tables表格</p>
<p>pd.read_clipboard()：从你的粘贴板获取内容，并传给read_table()</p>
<p>pd.DataFrame(dict)：从字典对象导入数据，Key是列名，Value是数据</p>
<h4 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h4><p>df.to_csv(filename)：导出数据到CSV文件</p>
<p>df.to_excel(filename)：导出数据到Excel文件</p>
<p>df.to_sql(table_name, connection_object)：导出数据到SQL表</p>
<p>df.to_json(filename)：以Json格式导出数据到文本文件</p>
<h3 id="Pandas查看、检查数据"><a href="#Pandas查看、检查数据" class="headerlink" title="Pandas查看、检查数据"></a><strong>Pandas查看、检查数据</strong></h3><p>df.head(n)：查看DataFrame对象的前n行</p>
<p>df.tail(n)：查看DataFrame对象的最后n行</p>
<p>df.shape()：查看行数和列数</p>
<p><a href="http://df.info()：查看索引、数据类型和内存信息">http://df.info()：查看索引、数据类型和内存信息</a></p>
<p>df.describe()：查看数值型列的汇总统计</p>
<p>s.value_counts(dropna=False)：查看Series对象的唯一值和计数</p>
<p>df.apply(pd.Series.value_counts)：查看DataFrame对象中每一列的唯一值和计数</p>
<h3 id="Pandas数据选取"><a href="#Pandas数据选取" class="headerlink" title="Pandas数据选取"></a><strong>Pandas数据选取</strong></h3><p>df[col]：根据列名，并以Series的形式返回列</p>
<p>df[[col1, col2]]：以DataFrame形式返回多列</p>
<p>s.iloc[0]：按位置选取数据</p>
<p>s.loc[‘index_one’]：按索引选取数据</p>
<p>df.iloc[0,:]：返回第一行</p>
<p>df.iloc[0,0]：返回第一列的第一个元素</p>
<h3 id="pandas数据清理"><a href="#pandas数据清理" class="headerlink" title="pandas数据清理"></a><strong>pandas数据清理</strong></h3><p>df.columns = [‘a’,’b’,’c’]：重命名列名</p>
<p>pd.isnull()：检查DataFrame对象中的空值，并返回一个Boolean数组</p>
<p>pd.notnull()：检查DataFrame对象中的非空值，并返回一个Boolean数组</p>
<p>df.dropna()：删除所有包含空值的行</p>
<p>df.dropna(axis=1)：删除所有包含空值的列</p>
<p>df.dropna(axis=1,thresh=n)：删除所有小于n个非空值的行</p>
<p>df.fillna(x)：用x替换DataFrame对象中所有的空值</p>
<p>s.astype(float)：将Series中的数据类型更改为float类型</p>
<p>s.replace(1,’one’)：用‘one’代替所有等于1的值</p>
<p>s.replace([1,3],[‘one’,’three’])：用’one’代替1，用’three’代替3</p>
<p>df.rename(columns=lambda x: x + 1)：批量更改列名</p>
<p>df.rename(columns={‘old_name’: ‘new_ name’})：选择性更改列名</p>
<p>df.set_index(‘column_one’)：更改索引列</p>
<p>df.rename(index=lambda x: x + 1)：批量重命名索引</p>
<h3 id="Pandas数据处理"><a href="#Pandas数据处理" class="headerlink" title="Pandas数据处理"></a><strong>Pandas数据处理</strong></h3><p>df.columns = [‘a’,’b’,’c’]：重命名列名</p>
<p>pd.isnull()：检查DataFrame对象中的空值，并返回一个Boolean数组</p>
<p>pd.notnull()：检查DataFrame对象中的非空值，并返回一个Boolean数组</p>
<p>df.dropna()：删除所有包含空值的行</p>
<p>df.dropna(axis=1)：删除所有包含空值的列</p>
<p>df.dropna(axis=1,thresh=n)：删除所有小于n个非空值的行</p>
<p>df.fillna(x)：用x替换DataFrame对象中所有的空值</p>
<p>s.astype(float)：将Series中的数据类型更改为float类型</p>
<p>s.replace(1,’one’)：用‘one’代替所有等于1的值</p>
<p>s.replace([1,3],[‘one’,’three’])：用’one’代替1，用’three’代替3</p>
<p>df.rename(columns=lambda x: x + 1)：批量更改列名</p>
<p>df.rename(columns={‘old_name’: ‘new_ name’})：选择性更改列名</p>
<p>df.set_index(‘column_one’)：更改索引列</p>
<p>df.rename(index=lambda x: x + 1)：批量重命名索引</p>
<p>df[df[col] &gt; 0.5]：选择col列的值大于0.5的行</p>
<p>df.sort_values(col1)：按照列col1排序数据，默认升序排列</p>
<p>df.sort_values(col2, ascending=False)：按照列col1降序排列数据</p>
<p>df.sort_values([col1,col2], ascending=[True,False])：先按列col1升序排列，后按col2降序排列数据</p>
<p>df.groupby(col)：返回一个按列col进行分组的Groupby对象</p>
<p>df.groupby([col1,col2])：返回一个按多列进行分组的Groupby对象</p>
<p>df.groupby(col1)[col2]：返回按列col1进行分组后，列col2的均值</p>
<p>df.pivot_table(index=col1, values=[col2,col3], aggfunc=max)：创建一个按列col1进行分组，并计算col2和col3的最大值的数据透视表</p>
<p>df.groupby(col1).agg(np.mean)：返回按列col1分组的所有列的均值</p>
<p>data.apply(np.mean)：对DataFrame中的每一列应用函数np.mean</p>
<p>data.apply(np.max,axis=1)：对DataFrame中的每一行应用函数np.max</p>
<h4 id="Pandas数据合并"><a href="#Pandas数据合并" class="headerlink" title="Pandas数据合并"></a><strong>Pandas数据合并</strong></h4><p>df1.append(df2)：将df2中的行添加到df1的尾部</p>
<p>df.concat([df1, df2],axis=1)：将df2中的列添加到df1的尾部</p>
<p>df1.join(df2,on=col1,how=’inner’)：对df1的列和df2的列执行SQL形式的join</p>
<h4 id="Pandas数据统计"><a href="#Pandas数据统计" class="headerlink" title="Pandas数据统计"></a><strong>Pandas数据统计</strong></h4><p>df.describe()：查看数据值列的汇总统计</p>
<p>df.mean()：返回所有列的均值</p>
<p>df.corr()：返回列与列之间的相关系数</p>
<p>df.count()：返回每一列中的非空值的个数</p>
<p>df.max()：返回每一列的最大值</p>
<p>df.min()：返回每一列的最小值</p>
<p>df.median()：返回每一列的中位数</p>
<p>df.std()：返回每一列的标准差</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
        <tag>python</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python数据分析教程（一）：Numpy</title>
    <url>/posts/13140.html</url>
    <content><![CDATA[<h2 id="数据的纬度"><a href="#数据的纬度" class="headerlink" title="数据的纬度"></a>数据的纬度</h2><p>一维数据：列表和集合类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000249971-1418691440.png"></p>
<p>二维数据：列表类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000618175-248885984.png"></p>
<p>多维数据：列表类型</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000627314-315089200.png"></p>
<p>高维数据：字典类型或数据表示格式，如<code>json</code>、<code>xml</code>、<code>yaml</code></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000636576-992489207.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000320410-1397054611.png"></p>
<p><strong>维度：一组数据的组织形式</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000408689-1436965707.png"></p>
<p><strong>列表和数组</strong>：<strong>一组数据的有序结构</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920000446411-1600490984.png"></p>
<h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><h3 id="Numpy介绍"><a href="#Numpy介绍" class="headerlink" title="Numpy介绍"></a>Numpy介绍</h3><ul>
<li><p>NumPy是一个开源的Python科学计算基础库，包含：</p>
<ul>
<li><p>一个强大的N维数组对象ndarray</p>
</li>
<li><p>广播功能函数</p>
</li>
<li><p>整合C/C++/Fortran代码的工具</p>
</li>
<li><p>线性代数、傅里叶变换、随机数生成等功能</p>
</li>
</ul>
</li>
<li><p>NumPy是SciPy、Pandas等数据处理或科学计算库的基础</p>
</li>
</ul>
<p><strong>模块导入：</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="N维数组对象：ndarray"><a href="#N维数组对象：ndarray" class="headerlink" title="N维数组对象：ndarray"></a><strong>N维数组对象：ndarray</strong></h3><ul>
<li><p>数组对象可以去掉元素间运算所需的循环，使一维向量更像单个数据</p>
</li>
<li><p>设置专门的数组对象，经过优化，可以提升这类应用的运算速度————科学计算中，一个维度所有数据的类型往往相同</p>
</li>
<li><p>数组对象采用相同的数据类型，有助于节省运算和存储空间</p>
</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920001445590-1835589251.png"></p>
<h3 id="ndarray实例"><a href="#ndarray实例" class="headerlink" title="ndarray实例"></a><strong>ndarray实例</strong></h3><ul>
<li>ndarray是一个多维数组对象，由两部分构成：<ul>
<li>实际的数据</li>
<li>描述这些数据的元数据（数据维度、数据类型等）</li>
</ul>
</li>
<li>ndarray数组一般要求所有元素类型相同（同质），数组下标从0开始</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920001543215-76244284.png"></p>
<h3 id="ndarray对象的属性"><a href="#ndarray对象的属性" class="headerlink" title="ndarray对象的属性"></a><strong>ndarray对象的属性</strong></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#属性&amp;说明</span>
<span class="token punctuation">.</span>ndim <span class="token comment">#秩，即轴的数量或维度的数量</span>
<span class="token punctuation">.</span>shape <span class="token comment">#ndarray对象的尺度，对于矩阵，n行m列</span>
<span class="token punctuation">.</span>size <span class="token comment">#ndarray对象元素的个数，相当于.shape中n*m的值</span>
<span class="token punctuation">.</span>dtype <span class="token comment">#ndarray对象的元素类型</span>
<span class="token punctuation">.</span>itemsize <span class="token comment">#ndarray对象中每个元素的大小，以字节为单位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002133785-897537873.png"></p>
<h4 id="ndarray的元素类型"><a href="#ndarray的元素类型" class="headerlink" title="ndarray的元素类型"></a><strong>ndarray的元素类型</strong></h4><p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002045637-1873947497.png"></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002050016-1829180101.png"></p>
<h3 id="ndarray数组的创建方法"><a href="#ndarray数组的创建方法" class="headerlink" title="ndarray数组的创建方法"></a><strong>ndarray数组的创建方法</strong></h3><ul>
<li>从Python中的列表、元组等类型创建ndarray数组</li>
<li>使用NumPy中函数创建ndarray数组，如：arange, ones, zeros等</li>
<li>从字节流（raw bytes）中创建ndarray数组</li>
<li>从文件中读取特定格式，创建ndarray数组</li>
</ul>
<p><strong>通过列表创建ndarray:</strong></p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002306999-2099371921.png"></p>
<p><strong>使用函数创建ndarray:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">#类似range()函数，返回ndarray类型，元素从0到n-1</span>
np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shapes生成一个全l数组，shape是元组类型</span>
np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shape生成一个全数组，shape是元组类型</span>
np<span class="token punctuation">.</span>full<span class="token punctuation">(</span>shape<span class="token punctuation">,</span>val<span class="token punctuation">)</span> <span class="token comment">#根据shape:生成一个数组，每个元素值都是val</span>
np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">#创建一个正方的n*n单位矩阵，对角线为1，其余为0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>ndarray数组的变换:</strong></p>
<p>对于创建后的ndarray数组，可以对其进行维度变换和元素类型变换</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#方法&amp;说明</span>
<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#不改变数组元素，返回一个shape形状的数组，原数组不变</span>
<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token comment">#与.reshape()功能一致，但修改原数组</span>
<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span>ax1<span class="token punctuation">,</span>ax2<span class="token punctuation">)</span> <span class="token comment">#将数组n个维度中两个维度进行调换</span>
<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#对数组进行降维，返回折叠后的一维数组，原数组不变</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920002943743-1325252769.png"></p>
<p><strong>数组的索引和切片</strong></p>
<ul>
<li>索引：获取数组中特定位置元素的过程</li>
<li>切片：获取数组元素子集的过程</li>
</ul>
<p>一维数组的索引和切片</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003101445-981037972.png"></p>
<p>多维数组索引</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003139141-484127738.png"></p>
<p>多维数组切片</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920003159689-806595432.png"></p>
<h3 id="ndarray数组的运算"><a href="#ndarray数组的运算" class="headerlink" title="ndarray数组的运算"></a><strong>ndarray数组的运算</strong></h3><p><strong>NumPy一元函数:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的绝对值</span>
np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的平方根</span>
np<span class="token punctuation">.</span>square<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的平方</span>
np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>1og10<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>1og2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的自然对数、10底对数和2底对数</span>
np<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的ceiling值或f1oor值</span>
np<span class="token punctuation">.</span>rint<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的四舍五入值</span>
np<span class="token punctuation">.</span>modf<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#将数组各元素的小数和整数部分以两个独立数组形式返回</span>
np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>cosh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>sinh<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的普通型和双曲型三角函数</span>
np<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>x<span class="token punctuation">)</span>np<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的指数值</span>
np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#计算数组各元素的符号值，1(+)，0，-1(-)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>NumPy二元函数:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
<span class="token operator">+</span> <span class="token operator">-</span> <span class="token operator">*</span> <span class="token operator">/</span> <span class="token operator">**</span> <span class="token comment">#两个数组各元素进行对应运算</span>
np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fmin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#元素级的最大值/最小值计算</span>
np<span class="token punctuation">.</span>mod<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment">#元素级的模运算</span>
np<span class="token punctuation">.</span>copysign<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment">#将数组y中各元素值的符号赋值给数组x对应元素</span>
<span class="token operator">&gt;</span><span class="token operator">&lt;</span> <span class="token operator">&gt;=</span> <span class="token operator">&lt;=</span> <span class="token operator">==</span> <span class="token operator">!=</span> <span class="token comment">#算术比较，产生布尔型数组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>Numpy数据存取:</strong></p>
<p>csv格式:</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920004240502-1839875867.png"></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>array<span class="token punctuation">,</span>fmt<span class="token operator">=</span><span class="token string">'%.18e'</span><span class="token punctuation">,</span>delimiter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>frame：文件、字符串或产生器，可以是.gz或.bz2的压缩文件</li>
<li>array:存入文件的数组</li>
<li>fmt:写入文件的格式，例如：%d%.2f%.18e</li>
<li>delimiter:分割字符串，默认是任何空格</li>
</ul>
<p>其他：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">,</span>delimiter<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ul>
<li>frame:文件、字符串或产生器，可以是.gz或.bz2的压缩文件</li>
<li>dtype:数据类型，可选</li>
<li>delimiter:分割字符串，默认是任何空格</li>
<li>unpack:如果True,读入属性将分别写入不同变量</li>
</ul>
<p>其他：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token punctuation">.</span>tofile<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">,</span> count<span class="token operator">=</span>‐<span class="token number">1</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>numpy随机数函数子库:</strong></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
rand<span class="token punctuation">(</span>d0<span class="token punctuation">,</span>d1<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>dn<span class="token punctuation">)</span> <span class="token comment">#根据d0-dn创建随机数数组，浮点数，[0,1)，均匀分布</span>
randn<span class="token punctuation">(</span>d0<span class="token punctuation">,</span>d1<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>dn<span class="token punctuation">)</span> <span class="token comment">#根据d0-dn创建随机数数组，标准正态分布</span>
randint<span class="token punctuation">(</span>low<span class="token punctuation">[</span><span class="token punctuation">,</span>high<span class="token punctuation">,</span>shape<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#根据shapet创建随机整数或整数数组，范围是[low,high)</span>
seed<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">#随机数种子，s是给定的种子值</span>
shuffle<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#根据数组a的第1轴进行随排列，改变数组×</span>
permutation<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#根据数组a的第1轴产生一个新的乱序数组，不改变数组x</span>
choice<span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>replace<span class="token punctuation">,</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#从一维数组a中以概率p抽取元素，形成size形状新数组 replace表示是否可以重用元素，默认为False</span>
uniform<span class="token punctuation">(</span>low<span class="token punctuation">,</span>high<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有均匀分布的数组，low起始值，high结束值，size形状</span>
normal<span class="token punctuation">(</span>loc<span class="token punctuation">,</span>scale<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有正态分布的数组，loc均值，scale标准差，size形状</span>
poisson<span class="token punctuation">(</span>lam<span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token comment">#产生具有泊松分布的数组，lam随机事件发生率，size形状</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>numpy统计函数:</strong></p>
<pre class="line-numbers language-none"><code class="language-none">np.*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#函数&amp;说明</span>
<span class="token builtin">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素之和，axis整数或元组</span>
mean<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的期望，axis整数或元组</span>
average<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>weights<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的加权平均值</span>
std<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的标准差</span>
var<span class="token punctuation">(</span>a<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#根据给定轴axis计算数组a相关元素的方差</span>
<span class="token builtin">min</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素的最小值、最大值</span>
argmin<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
argmax<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素最小值、最大值的降一维后下标</span>
unravel_index<span class="token punctuation">(</span>index<span class="token punctuation">,</span>shape<span class="token punctuation">)</span> <span class="token comment">#根据shape?将一维下标index转换成多维下标</span>
ptp<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素最大值与最小值的差</span>
median<span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">#计算数组a中元素的中位数（中值）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>numpy替换函数:</strong></p>
<ul>
<li>np.where(condition, x, y) ——满足条件(condition)，输出x，不满足输出y。</li>
<li>只有条件 (condition)，没有x和y，则输出满足条件 (即非0) 元素的坐标 (等价于numpy.nonzero)</li>
</ul>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920005642662-1268532120.png"></p>
<h3 id="numpy数据存取与函数"><a href="#numpy数据存取与函数" class="headerlink" title="numpy数据存取与函数**"></a><strong>numpy</strong>数据存取与函数**</h3><p>CSV文件</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>多维数据存取</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token punctuation">.</span>tofile<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>随机函数</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
        <tag>python</tag>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/16107.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>投资学博迪第十版.pdf下载</title>
    <url>/posts/15785.html</url>
    <content><![CDATA[<p>作者：（美）滋维&amp;middot;博迪（Zvi Bodie）,（美）亚历克斯&amp;middot;凯恩（Alex Kane）,（美）艾伦J.马库斯（Alan J.Marcus）</p>
<p>出版社：<a href="http://www.txtepub.com/tag/%E6%9C%BA%E6%A2%B0%E5%B7%A5%E4%B8%9A%E5%87%BA%E7%89%88%E7%A4%BE">机械工业出版社</a></p>
格式: PDF

<p>封面：</p>
<p><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920083837829-995145796.png"></p>
<p>下载链接：<a href="https://yun.xknat.icu/s/b14sO">https://yun.xknat.icu/s/b14sO</a></p>
<p>资源来自于互联网，如分享有损你的权益，请联系我删除！<br>更多资源请关注微信公众号：<br><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920083850371-459574706.png"></p>
]]></content>
      <categories>
        <category>电子书</category>
      </categories>
      <tags>
        <tag>电子书</tag>
        <tag>经管</tag>
      </tags>
  </entry>
  <entry>
    <title>第一行代码Android（第3版）pdf</title>
    <url>/posts/43427.html</url>
    <content><![CDATA[<p>2020年人民邮电出版社出版的图书<br>《第一行代码Android（第3版）》是2020年4月人民邮电出版社出版的图书，作者是郭霖。</p>
<p>封面：<br><img src="https://img2022.cnblogs.com/blog/2910984/202209/2910984-20220920083910008-28177591.png"></p>
<p>内容简介：<br>《第一行代码 Android 第3版》被Android开发者誉为“Android学习第一书”。全书系统全面、循序渐进地介绍了Android软件开发的必备知识、经验和技巧。<br>《第一行代码 Android 第3版》基于Android 10.0对第2版进行了全面更新，不仅将所有知识点都在Android 10.0系统上进行了重新适配，同时加入Kotlin语言的全面讲解，使用Kotlin对全书代码进行重写，而且还介绍了最新系统特性以及Jetpack架构组件的使用，使本书更加实用。<br>《第一行代码 Android 第3版》内容通俗易懂，由浅入深，既是Android初学者的入门必备，也是Android开发者的进阶首选。 </p>
<p>下载地址：<a href="https://wwp.lanzoub.com/iNBcu0bh15xi">https://wwp.lanzoub.com/iNBcu0bh15xi</a></p>
<p>资源来自于互联网，如分享有损你的权益，请私信我删除！</p>
]]></content>
      <categories>
        <category>电子书</category>
      </categories>
      <tags>
        <tag>电子书</tag>
        <tag>开发</tag>
      </tags>
  </entry>
</search>
